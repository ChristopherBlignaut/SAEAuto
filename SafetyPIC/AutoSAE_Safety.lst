;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/07/2013 11:06:29 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2909      	GOTO       265
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00BC      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00BD      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A0      	MOVWF      32
;AutoSAE_Safety.c,32 :: 		void interrupt() {
;AutoSAE_Safety.c,34 :: 		if(hb_interruptcount > 10) {
0x000F	0x3080      	MOVLW      128
0x0010	0x00F0      	MOVWF      R0
0x0011	0x3080      	MOVLW      128
0x0012	0x0622      	XORWF      _hb_interruptcount+1, 0
0x0013	0x0270      	SUBWF      R0, 0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2818      	GOTO       L__interrupt70
0x0016	0x0821      	MOVF       _hb_interruptcount, 0
0x0017	0x3C0A      	SUBLW      10
L__interrupt70:
0x0018	0x1803      	BTFSC      STATUS, 0
0x0019	0x282C      	GOTO       L_interrupt3
;AutoSAE_Safety.c,35 :: 		if(arm_state > 0) {
0x001A	0x3080      	MOVLW      128
0x001B	0x3A00      	XORLW      0
0x001C	0x00F0      	MOVWF      R0
0x001D	0x3080      	MOVLW      128
0x001E	0x066E      	XORWF      _arm_state, 0
0x001F	0x0270      	SUBWF      R0, 0
0x0020	0x1803      	BTFSC      STATUS, 0
0x0021	0x2829      	GOTO       L_interrupt4
;AutoSAE_Safety.c,36 :: 		hb_trip = 1;    // HB LED constant on
0x0022	0x3001      	MOVLW      1
0x0023	0x1683      	BSF        STATUS, 5
0x0024	0x00B1      	MOVWF      _hb_trip
;AutoSAE_Safety.c,37 :: 		tripreq = 1;
0x0025	0x3001      	MOVLW      1
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x00B1      	MOVWF      _tripreq
;AutoSAE_Safety.c,38 :: 		}
0x0028	0x282B      	GOTO       L_interrupt5
L_interrupt4:
;AutoSAE_Safety.c,39 :: 		else { hb_interruptcount = 0; }
0x0029	0x01A1      	CLRF       _hb_interruptcount
0x002A	0x01A2      	CLRF       _hb_interruptcount+1
L_interrupt5:
;AutoSAE_Safety.c,40 :: 		}
0x002B	0x282F      	GOTO       L_interrupt6
L_interrupt3:
;AutoSAE_Safety.c,41 :: 		else { hb_interruptcount++; }
0x002C	0x0AA1      	INCF       _hb_interruptcount, 1
0x002D	0x1903      	BTFSC      STATUS, 2
0x002E	0x0AA2      	INCF       _hb_interruptcount+1, 1
L_interrupt6:
;AutoSAE_Safety.c,43 :: 		if(arm_state == 1) {
0x002F	0x086E      	MOVF       _arm_state, 0
0x0030	0x3A01      	XORLW      1
0x0031	0x1D03      	BTFSS      STATUS, 2
0x0032	0x2841      	GOTO       L_interrupt7
;AutoSAE_Safety.c,44 :: 		if(arm_interruptcount > 200) { arm_state = 2; }
0x0033	0x3080      	MOVLW      128
0x0034	0x00F0      	MOVWF      R0
0x0035	0x3080      	MOVLW      128
0x0036	0x0669      	XORWF      _arm_interruptcount+1, 0
0x0037	0x0270      	SUBWF      R0, 0
0x0038	0x1D03      	BTFSS      STATUS, 2
0x0039	0x283C      	GOTO       L__interrupt71
0x003A	0x0868      	MOVF       _arm_interruptcount, 0
0x003B	0x3CC8      	SUBLW      200
L__interrupt71:
0x003C	0x1803      	BTFSC      STATUS, 0
0x003D	0x2840      	GOTO       L_interrupt8
0x003E	0x3002      	MOVLW      2
0x003F	0x00EE      	MOVWF      _arm_state
L_interrupt8:
;AutoSAE_Safety.c,45 :: 		}
0x0040	0x2887      	GOTO       L_interrupt9
L_interrupt7:
;AutoSAE_Safety.c,46 :: 		else if(arm_state == 3) {
0x0041	0x086E      	MOVF       _arm_state, 0
0x0042	0x3A03      	XORLW      3
0x0043	0x1D03      	BTFSS      STATUS, 2
0x0044	0x2853      	GOTO       L_interrupt10
;AutoSAE_Safety.c,47 :: 		if(arm_interruptcount > 200) { arm_state = 4; }
0x0045	0x3080      	MOVLW      128
0x0046	0x00F0      	MOVWF      R0
0x0047	0x3080      	MOVLW      128
0x0048	0x0669      	XORWF      _arm_interruptcount+1, 0
0x0049	0x0270      	SUBWF      R0, 0
0x004A	0x1D03      	BTFSS      STATUS, 2
0x004B	0x284E      	GOTO       L__interrupt72
0x004C	0x0868      	MOVF       _arm_interruptcount, 0
0x004D	0x3CC8      	SUBLW      200
L__interrupt72:
0x004E	0x1803      	BTFSC      STATUS, 0
0x004F	0x2852      	GOTO       L_interrupt11
0x0050	0x3004      	MOVLW      4
0x0051	0x00EE      	MOVWF      _arm_state
L_interrupt11:
;AutoSAE_Safety.c,48 :: 		}
0x0052	0x2887      	GOTO       L_interrupt12
L_interrupt10:
;AutoSAE_Safety.c,49 :: 		else if(arm_state == 5) {
0x0053	0x086E      	MOVF       _arm_state, 0
0x0054	0x3A05      	XORLW      5
0x0055	0x1D03      	BTFSS      STATUS, 2
0x0056	0x2866      	GOTO       L_interrupt13
;AutoSAE_Safety.c,50 :: 		if(arm_interruptcount > 500) { arm_state = 6; }
0x0057	0x3080      	MOVLW      128
0x0058	0x3A01      	XORLW      1
0x0059	0x00F0      	MOVWF      R0
0x005A	0x3080      	MOVLW      128
0x005B	0x0669      	XORWF      _arm_interruptcount+1, 0
0x005C	0x0270      	SUBWF      R0, 0
0x005D	0x1D03      	BTFSS      STATUS, 2
0x005E	0x2861      	GOTO       L__interrupt73
0x005F	0x0868      	MOVF       _arm_interruptcount, 0
0x0060	0x3CF4      	SUBLW      244
L__interrupt73:
0x0061	0x1803      	BTFSC      STATUS, 0
0x0062	0x2865      	GOTO       L_interrupt14
0x0063	0x3006      	MOVLW      6
0x0064	0x00EE      	MOVWF      _arm_state
L_interrupt14:
;AutoSAE_Safety.c,51 :: 		}
0x0065	0x2887      	GOTO       L_interrupt15
L_interrupt13:
;AutoSAE_Safety.c,52 :: 		else if(arm_state == 7) {
0x0066	0x086E      	MOVF       _arm_state, 0
0x0067	0x3A07      	XORLW      7
0x0068	0x1D03      	BTFSS      STATUS, 2
0x0069	0x2878      	GOTO       L_interrupt16
;AutoSAE_Safety.c,53 :: 		if(arm_interruptcount > 100) { arm_state = 8; }
0x006A	0x3080      	MOVLW      128
0x006B	0x00F0      	MOVWF      R0
0x006C	0x3080      	MOVLW      128
0x006D	0x0669      	XORWF      _arm_interruptcount+1, 0
0x006E	0x0270      	SUBWF      R0, 0
0x006F	0x1D03      	BTFSS      STATUS, 2
0x0070	0x2873      	GOTO       L__interrupt74
0x0071	0x0868      	MOVF       _arm_interruptcount, 0
0x0072	0x3C64      	SUBLW      100
L__interrupt74:
0x0073	0x1803      	BTFSC      STATUS, 0
0x0074	0x2877      	GOTO       L_interrupt17
0x0075	0x3008      	MOVLW      8
0x0076	0x00EE      	MOVWF      _arm_state
L_interrupt17:
;AutoSAE_Safety.c,54 :: 		}
0x0077	0x2887      	GOTO       L_interrupt18
L_interrupt16:
;AutoSAE_Safety.c,55 :: 		else if(arm_state == 9 || arm_state == 0) { arm_interruptcount = 0; }
0x0078	0x086E      	MOVF       _arm_state, 0
0x0079	0x3A09      	XORLW      9
0x007A	0x1903      	BTFSC      STATUS, 2
0x007B	0x2881      	GOTO       L__interrupt63
0x007C	0x086E      	MOVF       _arm_state, 0
0x007D	0x3A00      	XORLW      0
0x007E	0x1903      	BTFSC      STATUS, 2
0x007F	0x2881      	GOTO       L__interrupt63
0x0080	0x2884      	GOTO       L_interrupt21
L__interrupt63:
0x0081	0x01E8      	CLRF       _arm_interruptcount
0x0082	0x01E9      	CLRF       _arm_interruptcount+1
0x0083	0x2887      	GOTO       L_interrupt22
L_interrupt21:
;AutoSAE_Safety.c,56 :: 		else { arm_interruptcount++; }
0x0084	0x0AE8      	INCF       _arm_interruptcount, 1
0x0085	0x1903      	BTFSC      STATUS, 2
0x0086	0x0AE9      	INCF       _arm_interruptcount+1, 1
L_interrupt22:
L_interrupt18:
L_interrupt15:
L_interrupt12:
L_interrupt9:
;AutoSAE_Safety.c,58 :: 		TMR0 = 100;
0x0087	0x3064      	MOVLW      100
0x0088	0x0081      	MOVWF      TMR0
;AutoSAE_Safety.c,59 :: 		INTCON.TMR0IF = 0;
0x0089	0x110B      	BCF        INTCON, 2
;AutoSAE_Safety.c,60 :: 		}
L_end_interrupt:
L__interrupt69:
0x008A	0x0820      	MOVF       32, 0
0x008B	0x00F0      	MOVWF      R0
0x008C	0x1683      	BSF        STATUS, 5
0x008D	0x083D      	MOVF       ___savePCLATH, 0
0x008E	0x008A      	MOVWF      PCLATH
0x008F	0x0E3C      	SWAPF      ___saveSTATUS, 0
0x0090	0x0083      	MOVWF      STATUS
0x0091	0x0EFF      	SWAPF      R15, 1
0x0092	0x0E7F      	SWAPF      R15, 0
0x0093	0x0009      	RETFIE
; end of _interrupt
_UART1_Write:
;__Lib_UART_b52.c,38 :: 		
;__Lib_UART_b52.c,39 :: 		
L_UART1_Write3:
0x0094	0x1683      	BSF        STATUS, 5
0x0095	0x1303      	BCF        STATUS, 6
0x0096	0x1898      	BTFSC      TXSTA, 1
0x0097	0x289A      	GOTO       L_UART1_Write4
;__Lib_UART_b52.c,40 :: 		
0x0098	0x0000      	NOP
0x0099	0x2894      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_b52.c,41 :: 		
0x009A	0x0841      	MOVF       FARG_UART1_Write_data_, 0
0x009B	0x1283      	BCF        STATUS, 5
0x009C	0x0099      	MOVWF      TXREG
;__Lib_UART_b52.c,42 :: 		
L_end_UART1_Write:
0x009D	0x0008      	RETURN
; end of _UART1_Write
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x009E	0x1683      	BSF        STATUS, 5
0x009F	0x1303      	BCF        STATUS, 6
0x00A0	0x083B      	MOVF       ___DoICPAddr+1, 0
0x00A1	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00A2	0x083A      	MOVF       ___DoICPAddr, 0
0x00A3	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00A4	0x0008      	RETURN
; end of _____DoICP
_UART1_Write_Text:
;__Lib_UART_b52.c,46 :: 		
;__Lib_UART_b52.c,47 :: 		
0x00A5	0x1683      	BSF        STATUS, 5
0x00A6	0x1303      	BCF        STATUS, 6
0x00A7	0x01C0      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_b52.c,49 :: 		
0x00A8	0x083E      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x00A9	0x0084      	MOVWF      FSR
0x00AA	0x0800      	MOVF       INDF, 0
0x00AB	0x00BF      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_b52.c,50 :: 		
L_UART1_Write_Text5:
0x00AC	0x083F      	MOVF       UART1_Write_Text_data__L0, 0
0x00AD	0x3A00      	XORLW      0
0x00AE	0x1903      	BTFSC      STATUS, 2
0x00AF	0x28BB      	GOTO       L_UART1_Write_Text6
;__Lib_UART_b52.c,51 :: 		
0x00B0	0x083F      	MOVF       UART1_Write_Text_data__L0, 0
0x00B1	0x00C1      	MOVWF      FARG_UART1_Write_data_
0x00B2	0x2094      	CALL       _UART1_Write
;__Lib_UART_b52.c,52 :: 		
0x00B3	0x1683      	BSF        STATUS, 5
0x00B4	0x0AC0      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_b52.c,53 :: 		
0x00B5	0x0840      	MOVF       UART1_Write_Text_counter_L0, 0
0x00B6	0x073E      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x00B7	0x0084      	MOVWF      FSR
0x00B8	0x0800      	MOVF       INDF, 0
0x00B9	0x00BF      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_b52.c,54 :: 		
0x00BA	0x28AC      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_b52.c,55 :: 		
L_end_UART1_Write_Text:
0x00BB	0x0008      	RETURN
; end of _UART1_Write_Text
_UART1_Init:
;__Lib_UART_b52.c,2 :: 		
;__Lib_UART_b52.c,5 :: 		
0x00BC	0x1683      	BSF        STATUS, 5
0x00BD	0x1303      	BCF        STATUS, 6
0x00BE	0x1698      	BSF        TXSTA, 5
;__Lib_UART_b52.c,6 :: 		
0x00BF	0x3090      	MOVLW      144
0x00C0	0x1283      	BCF        STATUS, 5
0x00C1	0x0098      	MOVWF      RCSTA
;__Lib_UART_b52.c,7 :: 		
0x00C2	0x1683      	BSF        STATUS, 5
0x00C3	0x1506      	BSF        TRISB2_bit, BitPos(TRISB2_bit+0)
;__Lib_UART_b52.c,8 :: 		
0x00C4	0x1286      	BCF        TRISB5_bit, BitPos(TRISB5_bit+0)
;__Lib_UART_b52.c,10 :: 		
L_UART1_Init0:
0x00C5	0x1283      	BCF        STATUS, 5
0x00C6	0x1E8C      	BTFSS      PIR1, 5
0x00C7	0x28CB      	GOTO       L_UART1_Init1
;__Lib_UART_b52.c,11 :: 		
0x00C8	0x081A      	MOVF       RCREG, 0
0x00C9	0x00F0      	MOVWF      R0
0x00CA	0x28C5      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b52.c,12 :: 		
L_end_UART1_Init:
0x00CB	0x0008      	RETURN
; end of _UART1_Init
_UART1_Read:
;__Lib_UART_b52.c,21 :: 		
;__Lib_UART_b52.c,24 :: 		
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x1303      	BCF        STATUS, 6
0x00CE	0x081A      	MOVF       RCREG, 0
0x00CF	0x00F1      	MOVWF      R1
;__Lib_UART_b52.c,25 :: 		
0x00D0	0x1C98      	BTFSS      RCSTA, 1
0x00D1	0x28D4      	GOTO       L_UART1_Read2
;__Lib_UART_b52.c,26 :: 		
0x00D2	0x1218      	BCF        RCSTA, 4
;__Lib_UART_b52.c,27 :: 		
0x00D3	0x1618      	BSF        RCSTA, 4
;__Lib_UART_b52.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_b52.c,29 :: 		
0x00D4	0x0871      	MOVF       R1, 0
0x00D5	0x00F0      	MOVWF      R0
;__Lib_UART_b52.c,30 :: 		
L_end_UART1_Read:
0x00D6	0x0008      	RETURN
; end of _UART1_Read
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00D7	0x209E      	CALL       _____DoICP
0x00D8	0x118A      	BCF        PCLATH, 3
0x00D9	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00DA	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00DB	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00DC	0x0ABA      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00DD	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00DE	0x0ABB      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00DF	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00E0	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00E1	0x28D7      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00E2	0x0008      	RETURN
; end of ___CC2DW
_UART1_Data_Ready:
;__Lib_UART_b52.c,16 :: 		
;__Lib_UART_b52.c,17 :: 		
0x00E3	0x3000      	MOVLW      0
0x00E4	0x1283      	BCF        STATUS, 5
0x00E5	0x1303      	BCF        STATUS, 6
0x00E6	0x1A8C      	BTFSC      PIR1, 5
0x00E7	0x3001      	MOVLW      1
0x00E8	0x00F0      	MOVWF      R0
;__Lib_UART_b52.c,18 :: 		
L_end_UART1_Data_Ready:
0x00E9	0x0008      	RETURN
; end of _UART1_Data_Ready
_trip:
;AutoSAE_Safety.c,13 :: 		void trip() {
;AutoSAE_Safety.c,15 :: 		tripstate = 1;
0x00EA	0x3001      	MOVLW      1
0x00EB	0x1683      	BSF        STATUS, 5
0x00EC	0x1303      	BCF        STATUS, 6
0x00ED	0x00B2      	MOVWF      _tripstate
;AutoSAE_Safety.c,17 :: 		PORTB.B6 = 0;    // Open trip circuit
0x00EE	0x1283      	BCF        STATUS, 5
0x00EF	0x1306      	BCF        PORTB, 6
;AutoSAE_Safety.c,18 :: 		PORTA.B4 = 1;    // E-stop LED on
0x00F0	0x1605      	BSF        PORTA, 4
;AutoSAE_Safety.c,19 :: 		if(brakeil == 1) { PORTA.B1 = 1; }     // Activate brake interlock
0x00F1	0x086F      	MOVF       _brakeil, 0
0x00F2	0x3A01      	XORLW      1
0x00F3	0x1D03      	BTFSS      STATUS, 2
0x00F4	0x28F6      	GOTO       L_trip0
0x00F5	0x1485      	BSF        PORTA, 1
L_trip0:
;AutoSAE_Safety.c,21 :: 		if(hb_trip == 1) { PORTA.B3 = 1; }
0x00F6	0x1683      	BSF        STATUS, 5
0x00F7	0x0831      	MOVF       _hb_trip, 0
0x00F8	0x3A01      	XORLW      1
0x00F9	0x1D03      	BTFSS      STATUS, 2
0x00FA	0x28FE      	GOTO       L_trip1
0x00FB	0x1283      	BCF        STATUS, 5
0x00FC	0x1585      	BSF        PORTA, 3
0x00FD	0x2900      	GOTO       L_trip2
L_trip1:
0x00FE	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,22 :: 		else { PORTA.B3 = 0; }
0x00FF	0x1185      	BCF        PORTA, 3
L_trip2:
;AutoSAE_Safety.c,24 :: 		UART1_Write_Text("TRIP\n");
0x0100	0x30B3      	MOVLW      ?lstr1_AutoSAE_Safety
0x0101	0x1683      	BSF        STATUS, 5
0x0102	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0103	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,26 :: 		arm_state = -1;
0x0104	0x30FF      	MOVLW      255
0x0105	0x1283      	BCF        STATUS, 5
0x0106	0x00EE      	MOVWF      _arm_state
;AutoSAE_Safety.c,27 :: 		tripreq = 0;
0x0107	0x01B1      	CLRF       _tripreq
;AutoSAE_Safety.c,29 :: 		}
L_end_trip:
0x0108	0x0008      	RETURN
; end of _trip
_main:
0x0109	0x22BC      	CALL       700
;AutoSAE_Safety.c,64 :: 		void main() {
;AutoSAE_Safety.c,66 :: 		OSCCON = 0b1111110;    // Set up internal oscillator.
0x010A	0x307E      	MOVLW      126
0x010B	0x1683      	BSF        STATUS, 5
0x010C	0x1303      	BCF        STATUS, 6
0x010D	0x008F      	MOVWF      OSCCON
;AutoSAE_Safety.c,68 :: 		UART1_Init(9600);       // Init hardware UART
0x010E	0x3033      	MOVLW      51
0x010F	0x0099      	MOVWF      SPBRG
0x0110	0x1518      	BSF        TXSTA, 2
0x0111	0x20BC      	CALL       _UART1_Init
;AutoSAE_Safety.c,69 :: 		Delay_ms(500);
0x0112	0x3006      	MOVLW      6
0x0113	0x00FB      	MOVWF      R11
0x0114	0x3013      	MOVLW      19
0x0115	0x00FC      	MOVWF      R12
0x0116	0x30AD      	MOVLW      173
0x0117	0x00FD      	MOVWF      R13
L_main23:
0x0118	0x0BFD      	DECFSZ     R13, 1
0x0119	0x2918      	GOTO       L_main23
0x011A	0x0BFC      	DECFSZ     R12, 1
0x011B	0x2918      	GOTO       L_main23
0x011C	0x0BFB      	DECFSZ     R11, 1
0x011D	0x2918      	GOTO       L_main23
0x011E	0x0000      	NOP
0x011F	0x0000      	NOP
;AutoSAE_Safety.c,71 :: 		UART1_Write_Text("Hi\n");
0x0120	0x303B      	MOVLW      ?lstr2_AutoSAE_Safety
0x0121	0x1683      	BSF        STATUS, 5
0x0122	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0123	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,73 :: 		ANSEL  = 0;            // Set PortA pins to digital.
0x0124	0x019B      	CLRF       ANSEL
;AutoSAE_Safety.c,74 :: 		CMCON = 0x07;
0x0125	0x3007      	MOVLW      7
0x0126	0x009C      	MOVWF      CMCON
;AutoSAE_Safety.c,77 :: 		TRISA = 0b11100101;
0x0127	0x30E5      	MOVLW      229
0x0128	0x0085      	MOVWF      TRISA
;AutoSAE_Safety.c,78 :: 		TRISB = 0b10111100;
0x0129	0x30BC      	MOVLW      188
0x012A	0x0086      	MOVWF      TRISB
;AutoSAE_Safety.c,81 :: 		PORTA = 0;
0x012B	0x1283      	BCF        STATUS, 5
0x012C	0x0185      	CLRF       PORTA
;AutoSAE_Safety.c,82 :: 		PORTB = 0;
0x012D	0x0186      	CLRF       PORTB
;AutoSAE_Safety.c,85 :: 		INTCON.TMR0IE = 1;
0x012E	0x168B      	BSF        INTCON, 5
;AutoSAE_Safety.c,86 :: 		INTCON.TMR0IF = 0;
0x012F	0x110B      	BCF        INTCON, 2
;AutoSAE_Safety.c,87 :: 		OPTION_REG.T0CS = 0;  // bit 5  TMR0 Clock Source Select bit...0 = Internal Clock
0x0130	0x1683      	BSF        STATUS, 5
0x0131	0x1281      	BCF        OPTION_REG, 5
;AutoSAE_Safety.c,88 :: 		OPTION_REG.T0SE = 0;  // bit 4 TMR0 Source Edge Select bit 0 = low/high
0x0132	0x1201      	BCF        OPTION_REG, 4
;AutoSAE_Safety.c,89 :: 		OPTION_REG.PSA = 0;   // bit 3  Prescaler Assignment bit...0 = Prescaler is assigned to the Timer0
0x0133	0x1181      	BCF        OPTION_REG, 3
;AutoSAE_Safety.c,90 :: 		OPTION_REG.PS2 = 1;   // bits 2-0  PS2:PS0: Prescaler Rate Select bits
0x0134	0x1501      	BSF        OPTION_REG, 2
;AutoSAE_Safety.c,91 :: 		OPTION_REG.PS1 = 1;
0x0135	0x1481      	BSF        OPTION_REG, 1
;AutoSAE_Safety.c,92 :: 		OPTION_REG.PS0 = 1;
0x0136	0x1401      	BSF        OPTION_REG, 0
;AutoSAE_Safety.c,93 :: 		TMR0 = 100;             // preset for timer register
0x0137	0x3064      	MOVLW      100
0x0138	0x1283      	BCF        STATUS, 5
0x0139	0x0081      	MOVWF      TMR0
;AutoSAE_Safety.c,95 :: 		INTCON.GIE = 1;
0x013A	0x178B      	BSF        INTCON, 7
;AutoSAE_Safety.c,98 :: 		UART1_Write_Text("Init ok\n");
0x013B	0x3032      	MOVLW      ?lstr3_AutoSAE_Safety
0x013C	0x1683      	BSF        STATUS, 5
0x013D	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x013E	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,101 :: 		while(1) {
L_main24:
;AutoSAE_Safety.c,103 :: 		if(tripreq == 1) { trip(); }
0x013F	0x1283      	BCF        STATUS, 5
0x0140	0x0831      	MOVF       _tripreq, 0
0x0141	0x3A01      	XORLW      1
0x0142	0x1D03      	BTFSS      STATUS, 2
0x0143	0x2945      	GOTO       L_main26
0x0144	0x20EA      	CALL       _trip
L_main26:
;AutoSAE_Safety.c,106 :: 		if (UART1_Data_Ready()) {
0x0145	0x20E3      	CALL       _UART1_Data_Ready
0x0146	0x0870      	MOVF       R0, 0
0x0147	0x1903      	BTFSC      STATUS, 2
0x0148	0x2985      	GOTO       L_main27
;AutoSAE_Safety.c,107 :: 		uart_rd = UART1_Read();
0x0149	0x20CC      	CALL       _UART1_Read
0x014A	0x0870      	MOVF       R0, 0
0x014B	0x1683      	BSF        STATUS, 5
0x014C	0x00B9      	MOVWF      _uart_rd
;AutoSAE_Safety.c,109 :: 		if(uart_rd == 'E') { trip(); }
0x014D	0x0870      	MOVF       R0, 0
0x014E	0x3A45      	XORLW      69
0x014F	0x1D03      	BTFSS      STATUS, 2
0x0150	0x2952      	GOTO       L_main28
0x0151	0x20EA      	CALL       _trip
L_main28:
0x0152	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,111 :: 		oldhbstate = hbstate;
0x0153	0x0823      	MOVF       _hbstate, 0
0x0154	0x00A4      	MOVWF      _oldhbstate
;AutoSAE_Safety.c,113 :: 		if(uart_rd == '+') { hbstate = 1; }
0x0155	0x1683      	BSF        STATUS, 5
0x0156	0x0839      	MOVF       _uart_rd, 0
0x0157	0x3A2B      	XORLW      43
0x0158	0x1D03      	BTFSS      STATUS, 2
0x0159	0x295D      	GOTO       L_main29
0x015A	0x3001      	MOVLW      1
0x015B	0x1283      	BCF        STATUS, 5
0x015C	0x00A3      	MOVWF      _hbstate
L_main29:
;AutoSAE_Safety.c,114 :: 		if(uart_rd == '-') { hbstate = 0; }
0x015D	0x1683      	BSF        STATUS, 5
0x015E	0x0839      	MOVF       _uart_rd, 0
0x015F	0x3A2D      	XORLW      45
0x0160	0x1D03      	BTFSS      STATUS, 2
0x0161	0x2964      	GOTO       L_main30
0x0162	0x1283      	BCF        STATUS, 5
0x0163	0x01A3      	CLRF       _hbstate
L_main30:
;AutoSAE_Safety.c,116 :: 		if(uart_rd == 'B') { brakeil = 1; }
0x0164	0x1683      	BSF        STATUS, 5
0x0165	0x0839      	MOVF       _uart_rd, 0
0x0166	0x3A42      	XORLW      66
0x0167	0x1D03      	BTFSS      STATUS, 2
0x0168	0x296C      	GOTO       L_main31
0x0169	0x3001      	MOVLW      1
0x016A	0x1283      	BCF        STATUS, 5
0x016B	0x00EF      	MOVWF      _brakeil
L_main31:
;AutoSAE_Safety.c,117 :: 		if(uart_rd == 'H') { brakeil = 0; }
0x016C	0x1683      	BSF        STATUS, 5
0x016D	0x0839      	MOVF       _uart_rd, 0
0x016E	0x3A48      	XORLW      72
0x016F	0x1D03      	BTFSS      STATUS, 2
0x0170	0x2973      	GOTO       L_main32
0x0171	0x1283      	BCF        STATUS, 5
0x0172	0x01EF      	CLRF       _brakeil
L_main32:
0x0173	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,119 :: 		if(oldhbstate != hbstate) { hb_interruptcount = 0; }
0x0174	0x0824      	MOVF       _oldhbstate, 0
0x0175	0x0623      	XORWF      _hbstate, 0
0x0176	0x1903      	BTFSC      STATUS, 2
0x0177	0x297A      	GOTO       L_main33
0x0178	0x01A1      	CLRF       _hb_interruptcount
0x0179	0x01A2      	CLRF       _hb_interruptcount+1
L_main33:
;AutoSAE_Safety.c,121 :: 		UART1_Write_Text("ACK ");
0x017A	0x302C      	MOVLW      ?lstr4_AutoSAE_Safety
0x017B	0x1683      	BSF        STATUS, 5
0x017C	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x017D	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,122 :: 		UART1_Write(uart_rd);
0x017E	0x0839      	MOVF       _uart_rd, 0
0x017F	0x00C1      	MOVWF      FARG_UART1_Write_data_
0x0180	0x2094      	CALL       _UART1_Write
;AutoSAE_Safety.c,123 :: 		UART1_Write_Text("\n");
0x0181	0x302A      	MOVLW      ?lstr5_AutoSAE_Safety
0x0182	0x1683      	BSF        STATUS, 5
0x0183	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0184	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,124 :: 		}
L_main27:
0x0185	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,126 :: 		if(tripstate == 0) { PORTA.B3 = hbstate; }
0x0186	0x0832      	MOVF       _tripstate, 0
0x0187	0x3A00      	XORLW      0
0x0188	0x1D03      	BTFSS      STATUS, 2
0x0189	0x2990      	GOTO       L_main34
0x018A	0x1283      	BCF        STATUS, 5
0x018B	0x1823      	BTFSC      _hbstate, 0
0x018C	0x298F      	GOTO       L__main76
0x018D	0x1185      	BCF        PORTA, 3
0x018E	0x2990      	GOTO       L__main77
L__main76:
0x018F	0x1585      	BSF        PORTA, 3
L__main77:
L_main34:
0x0190	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,127 :: 		PORTB.B1 = brakeil;
0x0191	0x186F      	BTFSC      _brakeil, 0
0x0192	0x2995      	GOTO       L__main78
0x0193	0x1086      	BCF        PORTB, 1
0x0194	0x2996      	GOTO       L__main79
L__main78:
0x0195	0x1486      	BSF        PORTB, 1
L__main79:
;AutoSAE_Safety.c,129 :: 		if(arm_state > 0 && PORTA.B2 == 0 && tripstate == 0) {        // Dash e-stop
0x0196	0x3080      	MOVLW      128
0x0197	0x3A00      	XORLW      0
0x0198	0x00F0      	MOVWF      R0
0x0199	0x3080      	MOVLW      128
0x019A	0x066E      	XORWF      _arm_state, 0
0x019B	0x0270      	SUBWF      R0, 0
0x019C	0x1803      	BTFSC      STATUS, 0
0x019D	0x29A9      	GOTO       L_main37
0x019E	0x1905      	BTFSC      PORTA, 2
0x019F	0x29A9      	GOTO       L_main37
0x01A0	0x1683      	BSF        STATUS, 5
0x01A1	0x0832      	MOVF       _tripstate, 0
0x01A2	0x3A00      	XORLW      0
0x01A3	0x1D03      	BTFSS      STATUS, 2
0x01A4	0x29A9      	GOTO       L_main37
L__main66:
;AutoSAE_Safety.c,130 :: 		UART1_Write_Text("DES\n");
0x01A5	0x3025      	MOVLW      ?lstr6_AutoSAE_Safety
0x01A6	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01A7	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,131 :: 		trip();
0x01A8	0x20EA      	CALL       _trip
;AutoSAE_Safety.c,132 :: 		}
L_main37:
0x01A9	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,134 :: 		if(arm_state == 0) {
0x01AA	0x086E      	MOVF       _arm_state, 0
0x01AB	0x3A00      	XORLW      0
0x01AC	0x1D03      	BTFSS      STATUS, 2
0x01AD	0x29CC      	GOTO       L_main38
;AutoSAE_Safety.c,136 :: 		if(PORTB.B3 == 0) {
0x01AE	0x1986      	BTFSC      PORTB, 3
0x01AF	0x29CB      	GOTO       L_main39
;AutoSAE_Safety.c,137 :: 		UART1_Write_Text("AR\n");
0x01B0	0x306A      	MOVLW      ?lstr7_AutoSAE_Safety
0x01B1	0x1683      	BSF        STATUS, 5
0x01B2	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01B3	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,138 :: 		if(brakeil == 1) { PORTA.B1 = 1; }     // Activate brake interlock
0x01B4	0x1283      	BCF        STATUS, 5
0x01B5	0x086F      	MOVF       _brakeil, 0
0x01B6	0x3A01      	XORLW      1
0x01B7	0x1D03      	BTFSS      STATUS, 2
0x01B8	0x29BA      	GOTO       L_main40
0x01B9	0x1485      	BSF        PORTA, 1
L_main40:
;AutoSAE_Safety.c,139 :: 		PORTB.B0 = 0;                          // Throttle LED
0x01BA	0x1006      	BCF        PORTB, 0
;AutoSAE_Safety.c,140 :: 		PORTA.B4 = 0;                          // E-stop LED
0x01BB	0x1205      	BCF        PORTA, 4
;AutoSAE_Safety.c,141 :: 		PORTB.B6 = 0;                          // Trip relay
0x01BC	0x1306      	BCF        PORTB, 6
;AutoSAE_Safety.c,142 :: 		tripstate = 0;
0x01BD	0x1683      	BSF        STATUS, 5
0x01BE	0x01B2      	CLRF       _tripstate
;AutoSAE_Safety.c,143 :: 		hb_trip = 0;
0x01BF	0x01B1      	CLRF       _hb_trip
;AutoSAE_Safety.c,144 :: 		arm_state = 1;
0x01C0	0x3001      	MOVLW      1
0x01C1	0x1283      	BCF        STATUS, 5
0x01C2	0x00EE      	MOVWF      _arm_state
;AutoSAE_Safety.c,145 :: 		arm_interruptcount = 0;
0x01C3	0x01E8      	CLRF       _arm_interruptcount
0x01C4	0x01E9      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,146 :: 		hb_interruptcount = 0;
0x01C5	0x01A1      	CLRF       _hb_interruptcount
0x01C6	0x01A2      	CLRF       _hb_interruptcount+1
;AutoSAE_Safety.c,147 :: 		UART1_Write_Text("A 1\n");
0x01C7	0x3063      	MOVLW      ?lstr8_AutoSAE_Safety
0x01C8	0x1683      	BSF        STATUS, 5
0x01C9	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01CA	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,148 :: 		}
L_main39:
;AutoSAE_Safety.c,149 :: 		}
0x01CB	0x2A4D      	GOTO       L_main41
L_main38:
;AutoSAE_Safety.c,150 :: 		else if(arm_state == 1 || arm_state == 3) {
0x01CC	0x1283      	BCF        STATUS, 5
0x01CD	0x086E      	MOVF       _arm_state, 0
0x01CE	0x3A01      	XORLW      1
0x01CF	0x1903      	BTFSC      STATUS, 2
0x01D0	0x29D6      	GOTO       L__main65
0x01D1	0x086E      	MOVF       _arm_state, 0
0x01D2	0x3A03      	XORLW      3
0x01D3	0x1903      	BTFSC      STATUS, 2
0x01D4	0x29D6      	GOTO       L__main65
0x01D5	0x29E9      	GOTO       L_main44
L__main65:
;AutoSAE_Safety.c,151 :: 		if(PORTB.B3 == 1) { arm_state = -1; UART1_Write_Text("AF 1\n"); }   // Arm button
0x01D6	0x1D86      	BTFSS      PORTB, 3
0x01D7	0x29DE      	GOTO       L_main45
0x01D8	0x30FF      	MOVLW      255
0x01D9	0x00EE      	MOVWF      _arm_state
0x01DA	0x30AB      	MOVLW      ?lstr9_AutoSAE_Safety
0x01DB	0x1683      	BSF        STATUS, 5
0x01DC	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01DD	0x20A5      	CALL       _UART1_Write_Text
L_main45:
;AutoSAE_Safety.c,152 :: 		if(PORTB.B4 == 0) { arm_state = -1; PORTB.B0 = 1; UART1_Write_Text("AF 2\n"); }  // Throttle
0x01DE	0x1283      	BCF        STATUS, 5
0x01DF	0x1A06      	BTFSC      PORTB, 4
0x01E0	0x29E8      	GOTO       L_main46
0x01E1	0x30FF      	MOVLW      255
0x01E2	0x00EE      	MOVWF      _arm_state
0x01E3	0x1406      	BSF        PORTB, 0
0x01E4	0x30A5      	MOVLW      ?lstr10_AutoSAE_Safety
0x01E5	0x1683      	BSF        STATUS, 5
0x01E6	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01E7	0x20A5      	CALL       _UART1_Write_Text
L_main46:
;AutoSAE_Safety.c,153 :: 		}
0x01E8	0x2A4D      	GOTO       L_main47
L_main44:
;AutoSAE_Safety.c,154 :: 		else if(arm_state == 2) {
0x01E9	0x1283      	BCF        STATUS, 5
0x01EA	0x086E      	MOVF       _arm_state, 0
0x01EB	0x3A02      	XORLW      2
0x01EC	0x1D03      	BTFSS      STATUS, 2
0x01ED	0x29FD      	GOTO       L_main48
;AutoSAE_Safety.c,155 :: 		UART1_Write_Text("A 2\n");
0x01EE	0x30A0      	MOVLW      ?lstr11_AutoSAE_Safety
0x01EF	0x1683      	BSF        STATUS, 5
0x01F0	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01F1	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,156 :: 		PORTB.B6 = 1;
0x01F2	0x1283      	BCF        STATUS, 5
0x01F3	0x1706      	BSF        PORTB, 6
;AutoSAE_Safety.c,157 :: 		arm_state = 3;
0x01F4	0x3003      	MOVLW      3
0x01F5	0x00EE      	MOVWF      _arm_state
;AutoSAE_Safety.c,158 :: 		arm_interruptcount = 0;
0x01F6	0x01E8      	CLRF       _arm_interruptcount
0x01F7	0x01E9      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,159 :: 		UART1_Write_Text("A 3\n");
0x01F8	0x305E      	MOVLW      ?lstr12_AutoSAE_Safety
0x01F9	0x1683      	BSF        STATUS, 5
0x01FA	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01FB	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,160 :: 		}
0x01FC	0x2A4D      	GOTO       L_main49
L_main48:
;AutoSAE_Safety.c,161 :: 		else if(arm_state == 4) {
0x01FD	0x1283      	BCF        STATUS, 5
0x01FE	0x086E      	MOVF       _arm_state, 0
0x01FF	0x3A04      	XORLW      4
0x0200	0x1D03      	BTFSS      STATUS, 2
0x0201	0x2A10      	GOTO       L_main50
;AutoSAE_Safety.c,162 :: 		UART1_Write_Text("A 4\n");
0x0202	0x304A      	MOVLW      ?lstr13_AutoSAE_Safety
0x0203	0x1683      	BSF        STATUS, 5
0x0204	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0205	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,163 :: 		arm_interruptcount = 0;
0x0206	0x1283      	BCF        STATUS, 5
0x0207	0x01E8      	CLRF       _arm_interruptcount
0x0208	0x01E9      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,164 :: 		arm_state = 5;
0x0209	0x3005      	MOVLW      5
0x020A	0x00EE      	MOVWF      _arm_state
;AutoSAE_Safety.c,165 :: 		UART1_Write_Text("A 5\n");
0x020B	0x3045      	MOVLW      ?lstr14_AutoSAE_Safety
0x020C	0x1683      	BSF        STATUS, 5
0x020D	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x020E	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,166 :: 		}
0x020F	0x2A4D      	GOTO       L_main51
L_main50:
;AutoSAE_Safety.c,167 :: 		else if(arm_state == 5 || arm_state == 7) {
0x0210	0x1283      	BCF        STATUS, 5
0x0211	0x086E      	MOVF       _arm_state, 0
0x0212	0x3A05      	XORLW      5
0x0213	0x1903      	BTFSC      STATUS, 2
0x0214	0x2A1A      	GOTO       L__main64
0x0215	0x086E      	MOVF       _arm_state, 0
0x0216	0x3A07      	XORLW      7
0x0217	0x1903      	BTFSC      STATUS, 2
0x0218	0x2A1A      	GOTO       L__main64
0x0219	0x2A24      	GOTO       L_main54
L__main64:
;AutoSAE_Safety.c,168 :: 		if(PORTB.B4 == 0) { arm_state = -1; PORTB.B0 = 1; UART1_Write_Text("AF 3\n"); }      // Throttle
0x021A	0x1A06      	BTFSC      PORTB, 4
0x021B	0x2A23      	GOTO       L_main55
0x021C	0x30FF      	MOVLW      255
0x021D	0x00EE      	MOVWF      _arm_state
0x021E	0x1406      	BSF        PORTB, 0
0x021F	0x303F      	MOVLW      ?lstr15_AutoSAE_Safety
0x0220	0x1683      	BSF        STATUS, 5
0x0221	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0222	0x20A5      	CALL       _UART1_Write_Text
L_main55:
;AutoSAE_Safety.c,169 :: 		}
0x0223	0x2A4D      	GOTO       L_main56
L_main54:
;AutoSAE_Safety.c,170 :: 		else if(arm_state == 6) {
0x0224	0x1283      	BCF        STATUS, 5
0x0225	0x086E      	MOVF       _arm_state, 0
0x0226	0x3A06      	XORLW      6
0x0227	0x1D03      	BTFSS      STATUS, 2
0x0228	0x2A38      	GOTO       L_main57
;AutoSAE_Safety.c,171 :: 		UART1_Write_Text("A 6\n");
0x0229	0x3059      	MOVLW      ?lstr16_AutoSAE_Safety
0x022A	0x1683      	BSF        STATUS, 5
0x022B	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x022C	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,172 :: 		PORTA.B1 = 0;
0x022D	0x1283      	BCF        STATUS, 5
0x022E	0x1085      	BCF        PORTA, 1
;AutoSAE_Safety.c,173 :: 		arm_interruptcount = 0;
0x022F	0x01E8      	CLRF       _arm_interruptcount
0x0230	0x01E9      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,174 :: 		arm_state = 7;
0x0231	0x3007      	MOVLW      7
0x0232	0x00EE      	MOVWF      _arm_state
;AutoSAE_Safety.c,175 :: 		UART1_Write_Text("A 7\n");
0x0233	0x3054      	MOVLW      ?lstr17_AutoSAE_Safety
0x0234	0x1683      	BSF        STATUS, 5
0x0235	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0236	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,176 :: 		}
0x0237	0x2A4D      	GOTO       L_main58
L_main57:
;AutoSAE_Safety.c,177 :: 		else if(arm_state == 8) {
0x0238	0x1283      	BCF        STATUS, 5
0x0239	0x086E      	MOVF       _arm_state, 0
0x023A	0x3A08      	XORLW      8
0x023B	0x1D03      	BTFSS      STATUS, 2
0x023C	0x2A45      	GOTO       L_main59
;AutoSAE_Safety.c,178 :: 		UART1_Write_Text("A 9\n");
0x023D	0x304F      	MOVLW      ?lstr18_AutoSAE_Safety
0x023E	0x1683      	BSF        STATUS, 5
0x023F	0x00BE      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0240	0x20A5      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,179 :: 		arm_state = 9;
0x0241	0x3009      	MOVLW      9
0x0242	0x1283      	BCF        STATUS, 5
0x0243	0x00EE      	MOVWF      _arm_state
;AutoSAE_Safety.c,180 :: 		}
0x0244	0x2A4D      	GOTO       L_main60
L_main59:
;AutoSAE_Safety.c,181 :: 		else if(arm_state == -1) {
0x0245	0x086E      	MOVF       _arm_state, 0
0x0246	0x3AFF      	XORLW      255
0x0247	0x1D03      	BTFSS      STATUS, 2
0x0248	0x2A4D      	GOTO       L_main61
;AutoSAE_Safety.c,182 :: 		if(PORTB.B3 == 1) { PORTB.B6 = 0; arm_state = 0; }
0x0249	0x1D86      	BTFSS      PORTB, 3
0x024A	0x2A4D      	GOTO       L_main62
0x024B	0x1306      	BCF        PORTB, 6
0x024C	0x01EE      	CLRF       _arm_state
L_main62:
;AutoSAE_Safety.c,183 :: 		}
L_main61:
L_main60:
L_main58:
L_main56:
L_main51:
L_main49:
L_main47:
L_main41:
;AutoSAE_Safety.c,185 :: 		}
0x024D	0x293F      	GOTO       L_main24
;AutoSAE_Safety.c,187 :: 		}
L_end_main:
0x024E	0x2A4E      	GOTO       $+0
; end of _main
0x02BC	0x3021      	MOVLW      33
0x02BD	0x0084      	MOVWF      FSR
0x02BE	0x304D      	MOVLW      77
0x02BF	0x1283      	BCF        STATUS, 5
0x02C0	0x1303      	BCF        STATUS, 6
0x02C1	0x00F0      	MOVWF      R0
0x02C2	0x3054      	MOVLW      84
0x02C3	0x1683      	BSF        STATUS, 5
0x02C4	0x00BA      	MOVWF      ___DoICPAddr
0x02C5	0x3002      	MOVLW      2
0x02C6	0x00BB      	MOVWF      187
0x02C7	0x20D7      	CALL       215
0x02C8	0x30A0      	MOVLW      160
0x02C9	0x0084      	MOVWF      FSR
0x02CA	0x3011      	MOVLW      17
0x02CB	0x1283      	BCF        STATUS, 5
0x02CC	0x1303      	BCF        STATUS, 6
0x02CD	0x00F0      	MOVWF      R0
0x02CE	0x30A1      	MOVLW      161
0x02CF	0x1683      	BSF        STATUS, 5
0x02D0	0x00BA      	MOVWF      ___DoICPAddr
0x02D1	0x3002      	MOVLW      2
0x02D2	0x00BB      	MOVWF      187
0x02D3	0x20D7      	CALL       215
0x02D4	0x306E      	MOVLW      110
0x02D5	0x0084      	MOVWF      FSR
0x02D6	0x3002      	MOVLW      2
0x02D7	0x1283      	BCF        STATUS, 5
0x02D8	0x1303      	BCF        STATUS, 6
0x02D9	0x00F0      	MOVWF      R0
0x02DA	0x30BA      	MOVLW      186
0x02DB	0x1683      	BSF        STATUS, 5
0x02DC	0x00BA      	MOVWF      ___DoICPAddr
0x02DD	0x3002      	MOVLW      2
0x02DE	0x00BB      	MOVWF      187
0x02DF	0x20D7      	CALL       215
0x02E0	0x30B1      	MOVLW      177
0x02E1	0x0084      	MOVWF      FSR
0x02E2	0x3008      	MOVLW      8
0x02E3	0x1283      	BCF        STATUS, 5
0x02E4	0x1303      	BCF        STATUS, 6
0x02E5	0x00F0      	MOVWF      R0
0x02E6	0x30B2      	MOVLW      178
0x02E7	0x1683      	BSF        STATUS, 5
0x02E8	0x00BA      	MOVWF      ___DoICPAddr
0x02E9	0x3002      	MOVLW      2
0x02EA	0x00BB      	MOVWF      187
0x02EB	0x20D7      	CALL       215
0x02EC	0x0008      	RETURN
;AutoSAE_Safety.c,0 :: ?ICS_hb_interruptcount
0x0254	0x3400 ;?ICS_hb_interruptcount+0
0x0255	0x3400 ;?ICS_hb_interruptcount+1
; end of ?ICS_hb_interruptcount
;AutoSAE_Safety.c,0 :: ?ICS_hbstate
0x0256	0x3400 ;?ICS_hbstate+0
; end of ?ICS_hbstate
;AutoSAE_Safety.c,0 :: ?ICS_oldhbstate
0x0257	0x3400 ;?ICS_oldhbstate+0
; end of ?ICS_oldhbstate
;AutoSAE_Safety.c,0 :: ?ICS?lstr6_AutoSAE_Safety
0x0258	0x3444 ;?ICS?lstr6_AutoSAE_Safety+0
0x0259	0x3445 ;?ICS?lstr6_AutoSAE_Safety+1
0x025A	0x3453 ;?ICS?lstr6_AutoSAE_Safety+2
0x025B	0x340A ;?ICS?lstr6_AutoSAE_Safety+3
0x025C	0x3400 ;?ICS?lstr6_AutoSAE_Safety+4
; end of ?ICS?lstr6_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr5_AutoSAE_Safety
0x025D	0x340A ;?ICS?lstr5_AutoSAE_Safety+0
0x025E	0x3400 ;?ICS?lstr5_AutoSAE_Safety+1
; end of ?ICS?lstr5_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr4_AutoSAE_Safety
0x025F	0x3441 ;?ICS?lstr4_AutoSAE_Safety+0
0x0260	0x3443 ;?ICS?lstr4_AutoSAE_Safety+1
0x0261	0x344B ;?ICS?lstr4_AutoSAE_Safety+2
0x0262	0x3420 ;?ICS?lstr4_AutoSAE_Safety+3
0x0263	0x3400 ;?ICS?lstr4_AutoSAE_Safety+4
; end of ?ICS?lstr4_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_tripreq
0x0264	0x3400 ;?ICS_tripreq+0
; end of ?ICS_tripreq
;AutoSAE_Safety.c,0 :: ?ICS?lstr3_AutoSAE_Safety
0x0265	0x3449 ;?ICS?lstr3_AutoSAE_Safety+0
0x0266	0x346E ;?ICS?lstr3_AutoSAE_Safety+1
0x0267	0x3469 ;?ICS?lstr3_AutoSAE_Safety+2
0x0268	0x3474 ;?ICS?lstr3_AutoSAE_Safety+3
0x0269	0x3420 ;?ICS?lstr3_AutoSAE_Safety+4
0x026A	0x346F ;?ICS?lstr3_AutoSAE_Safety+5
0x026B	0x346B ;?ICS?lstr3_AutoSAE_Safety+6
0x026C	0x340A ;?ICS?lstr3_AutoSAE_Safety+7
0x026D	0x3400 ;?ICS?lstr3_AutoSAE_Safety+8
; end of ?ICS?lstr3_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr2_AutoSAE_Safety
0x026E	0x3448 ;?ICS?lstr2_AutoSAE_Safety+0
0x026F	0x3469 ;?ICS?lstr2_AutoSAE_Safety+1
0x0270	0x340A ;?ICS?lstr2_AutoSAE_Safety+2
0x0271	0x3400 ;?ICS?lstr2_AutoSAE_Safety+3
; end of ?ICS?lstr2_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr15_AutoSAE_Safety
0x0272	0x3441 ;?ICS?lstr15_AutoSAE_Safety+0
0x0273	0x3446 ;?ICS?lstr15_AutoSAE_Safety+1
0x0274	0x3420 ;?ICS?lstr15_AutoSAE_Safety+2
0x0275	0x3433 ;?ICS?lstr15_AutoSAE_Safety+3
0x0276	0x340A ;?ICS?lstr15_AutoSAE_Safety+4
0x0277	0x3400 ;?ICS?lstr15_AutoSAE_Safety+5
; end of ?ICS?lstr15_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr14_AutoSAE_Safety
0x0278	0x3441 ;?ICS?lstr14_AutoSAE_Safety+0
0x0279	0x3420 ;?ICS?lstr14_AutoSAE_Safety+1
0x027A	0x3435 ;?ICS?lstr14_AutoSAE_Safety+2
0x027B	0x340A ;?ICS?lstr14_AutoSAE_Safety+3
0x027C	0x3400 ;?ICS?lstr14_AutoSAE_Safety+4
; end of ?ICS?lstr14_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr13_AutoSAE_Safety
0x027D	0x3441 ;?ICS?lstr13_AutoSAE_Safety+0
0x027E	0x3420 ;?ICS?lstr13_AutoSAE_Safety+1
0x027F	0x3434 ;?ICS?lstr13_AutoSAE_Safety+2
0x0280	0x340A ;?ICS?lstr13_AutoSAE_Safety+3
0x0281	0x3400 ;?ICS?lstr13_AutoSAE_Safety+4
; end of ?ICS?lstr13_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr18_AutoSAE_Safety
0x0282	0x3441 ;?ICS?lstr18_AutoSAE_Safety+0
0x0283	0x3420 ;?ICS?lstr18_AutoSAE_Safety+1
0x0284	0x3439 ;?ICS?lstr18_AutoSAE_Safety+2
0x0285	0x340A ;?ICS?lstr18_AutoSAE_Safety+3
0x0286	0x3400 ;?ICS?lstr18_AutoSAE_Safety+4
; end of ?ICS?lstr18_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr17_AutoSAE_Safety
0x0287	0x3441 ;?ICS?lstr17_AutoSAE_Safety+0
0x0288	0x3420 ;?ICS?lstr17_AutoSAE_Safety+1
0x0289	0x3437 ;?ICS?lstr17_AutoSAE_Safety+2
0x028A	0x340A ;?ICS?lstr17_AutoSAE_Safety+3
0x028B	0x3400 ;?ICS?lstr17_AutoSAE_Safety+4
; end of ?ICS?lstr17_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr16_AutoSAE_Safety
0x028C	0x3441 ;?ICS?lstr16_AutoSAE_Safety+0
0x028D	0x3420 ;?ICS?lstr16_AutoSAE_Safety+1
0x028E	0x3436 ;?ICS?lstr16_AutoSAE_Safety+2
0x028F	0x340A ;?ICS?lstr16_AutoSAE_Safety+3
0x0290	0x3400 ;?ICS?lstr16_AutoSAE_Safety+4
; end of ?ICS?lstr16_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr12_AutoSAE_Safety
0x0291	0x3441 ;?ICS?lstr12_AutoSAE_Safety+0
0x0292	0x3420 ;?ICS?lstr12_AutoSAE_Safety+1
0x0293	0x3433 ;?ICS?lstr12_AutoSAE_Safety+2
0x0294	0x340A ;?ICS?lstr12_AutoSAE_Safety+3
0x0295	0x3400 ;?ICS?lstr12_AutoSAE_Safety+4
; end of ?ICS?lstr12_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr8_AutoSAE_Safety
0x0296	0x3441 ;?ICS?lstr8_AutoSAE_Safety+0
0x0297	0x3420 ;?ICS?lstr8_AutoSAE_Safety+1
0x0298	0x3431 ;?ICS?lstr8_AutoSAE_Safety+2
0x0299	0x340A ;?ICS?lstr8_AutoSAE_Safety+3
0x029A	0x3400 ;?ICS?lstr8_AutoSAE_Safety+4
; end of ?ICS?lstr8_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_arm_interruptcount
0x029B	0x3400 ;?ICS_arm_interruptcount+0
0x029C	0x3400 ;?ICS_arm_interruptcount+1
; end of ?ICS_arm_interruptcount
;AutoSAE_Safety.c,0 :: ?ICS?lstr7_AutoSAE_Safety
0x029D	0x3441 ;?ICS?lstr7_AutoSAE_Safety+0
0x029E	0x3452 ;?ICS?lstr7_AutoSAE_Safety+1
0x029F	0x340A ;?ICS?lstr7_AutoSAE_Safety+2
0x02A0	0x3400 ;?ICS?lstr7_AutoSAE_Safety+3
; end of ?ICS?lstr7_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr11_AutoSAE_Safety
0x02A1	0x3441 ;?ICS?lstr11_AutoSAE_Safety+0
0x02A2	0x3420 ;?ICS?lstr11_AutoSAE_Safety+1
0x02A3	0x3432 ;?ICS?lstr11_AutoSAE_Safety+2
0x02A4	0x340A ;?ICS?lstr11_AutoSAE_Safety+3
0x02A5	0x3400 ;?ICS?lstr11_AutoSAE_Safety+4
; end of ?ICS?lstr11_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr10_AutoSAE_Safety
0x02A6	0x3441 ;?ICS?lstr10_AutoSAE_Safety+0
0x02A7	0x3446 ;?ICS?lstr10_AutoSAE_Safety+1
0x02A8	0x3420 ;?ICS?lstr10_AutoSAE_Safety+2
0x02A9	0x3432 ;?ICS?lstr10_AutoSAE_Safety+3
0x02AA	0x340A ;?ICS?lstr10_AutoSAE_Safety+4
0x02AB	0x3400 ;?ICS?lstr10_AutoSAE_Safety+5
; end of ?ICS?lstr10_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr9_AutoSAE_Safety
0x02AC	0x3441 ;?ICS?lstr9_AutoSAE_Safety+0
0x02AD	0x3446 ;?ICS?lstr9_AutoSAE_Safety+1
0x02AE	0x3420 ;?ICS?lstr9_AutoSAE_Safety+2
0x02AF	0x3431 ;?ICS?lstr9_AutoSAE_Safety+3
0x02B0	0x340A ;?ICS?lstr9_AutoSAE_Safety+4
0x02B1	0x3400 ;?ICS?lstr9_AutoSAE_Safety+5
; end of ?ICS?lstr9_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_hb_trip
0x02B2	0x3400 ;?ICS_hb_trip+0
; end of ?ICS_hb_trip
;AutoSAE_Safety.c,0 :: ?ICS_tripstate
0x02B3	0x3400 ;?ICS_tripstate+0
; end of ?ICS_tripstate
;AutoSAE_Safety.c,0 :: ?ICS?lstr1_AutoSAE_Safety
0x02B4	0x3454 ;?ICS?lstr1_AutoSAE_Safety+0
0x02B5	0x3452 ;?ICS?lstr1_AutoSAE_Safety+1
0x02B6	0x3449 ;?ICS?lstr1_AutoSAE_Safety+2
0x02B7	0x3450 ;?ICS?lstr1_AutoSAE_Safety+3
0x02B8	0x340A ;?ICS?lstr1_AutoSAE_Safety+4
0x02B9	0x3400 ;?ICS?lstr1_AutoSAE_Safety+5
; end of ?ICS?lstr1_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_arm_state
0x02BA	0x3400 ;?ICS_arm_state+0
; end of ?ICS_arm_state
;AutoSAE_Safety.c,0 :: ?ICS_brakeil
0x02BB	0x3401 ;?ICS_brakeil+0
; end of ?ICS_brakeil
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [144]    _interrupt
0x0094      [10]    _UART1_Write
0x009E       [7]    _____DoICP
0x00A5      [23]    _UART1_Write_Text
0x00BC      [16]    _UART1_Init
0x00CC      [11]    _UART1_Read
0x00D7      [12]    ___CC2DW
0x00E3       [7]    _UART1_Data_Ready
0x00EA      [31]    _trip
0x0109     [325]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0021       [2]    _hb_interruptcount
0x0023       [1]    _hbstate
0x0024       [1]    _oldhbstate
0x0025       [5]    ?lstr6_AutoSAE_Safety
0x002A       [2]    ?lstr5_AutoSAE_Safety
0x002C       [5]    ?lstr4_AutoSAE_Safety
0x0031       [1]    _tripreq
0x0032       [9]    ?lstr3_AutoSAE_Safety
0x003B       [4]    ?lstr2_AutoSAE_Safety
0x003F       [6]    ?lstr15_AutoSAE_Safety
0x0045       [5]    ?lstr14_AutoSAE_Safety
0x004A       [5]    ?lstr13_AutoSAE_Safety
0x004F       [5]    ?lstr18_AutoSAE_Safety
0x0054       [5]    ?lstr17_AutoSAE_Safety
0x0059       [5]    ?lstr16_AutoSAE_Safety
0x005E       [5]    ?lstr12_AutoSAE_Safety
0x0063       [5]    ?lstr8_AutoSAE_Safety
0x0068       [2]    _arm_interruptcount
0x006A       [4]    ?lstr7_AutoSAE_Safety
0x006E       [1]    _arm_state
0x006F       [1]    _brakeil
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB2_bit
0x0086       [1]    TRISB
0x008F       [1]    OSCCON
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009B       [1]    ANSEL
0x009C       [1]    CMCON
0x00A0       [5]    ?lstr11_AutoSAE_Safety
0x00A5       [6]    ?lstr10_AutoSAE_Safety
0x00AB       [6]    ?lstr9_AutoSAE_Safety
0x00B1       [1]    _hb_trip
0x00B2       [1]    _tripstate
0x00B3       [6]    ?lstr1_AutoSAE_Safety
0x00B9       [1]    _uart_rd
0x00BA       [2]    ___DoICPAddr
0x00BC       [1]    ___saveSTATUS
0x00BD       [1]    ___savePCLATH
0x00BE       [1]    FARG_UART1_Write_Text_uart_text
0x00BF       [1]    UART1_Write_Text_data__L0
0x00C0       [1]    UART1_Write_Text_counter_L0
0x00C1       [1]    FARG_UART1_Write_data_
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0254       [2]    ?ICS_hb_interruptcount
0x0256       [1]    ?ICS_hbstate
0x0257       [1]    ?ICS_oldhbstate
0x0258       [5]    ?ICS?lstr6_AutoSAE_Safety
0x025D       [2]    ?ICS?lstr5_AutoSAE_Safety
0x025F       [5]    ?ICS?lstr4_AutoSAE_Safety
0x0264       [1]    ?ICS_tripreq
0x0265       [9]    ?ICS?lstr3_AutoSAE_Safety
0x026E       [4]    ?ICS?lstr2_AutoSAE_Safety
0x0272       [6]    ?ICS?lstr15_AutoSAE_Safety
0x0278       [5]    ?ICS?lstr14_AutoSAE_Safety
0x027D       [5]    ?ICS?lstr13_AutoSAE_Safety
0x0282       [5]    ?ICS?lstr18_AutoSAE_Safety
0x0287       [5]    ?ICS?lstr17_AutoSAE_Safety
0x028C       [5]    ?ICS?lstr16_AutoSAE_Safety
0x0291       [5]    ?ICS?lstr12_AutoSAE_Safety
0x0296       [5]    ?ICS?lstr8_AutoSAE_Safety
0x029B       [2]    ?ICS_arm_interruptcount
0x029D       [4]    ?ICS?lstr7_AutoSAE_Safety
0x02A1       [5]    ?ICS?lstr11_AutoSAE_Safety
0x02A6       [6]    ?ICS?lstr10_AutoSAE_Safety
0x02AC       [6]    ?ICS?lstr9_AutoSAE_Safety
0x02B2       [1]    ?ICS_hb_trip
0x02B3       [1]    ?ICS_tripstate
0x02B4       [6]    ?ICS?lstr1_AutoSAE_Safety
0x02BA       [1]    ?ICS_arm_state
0x02BB       [1]    ?ICS_brakeil
//** Label List: ** 
//----------------------------------------------
  L_trip0
  L_trip1
  L_trip2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L__interrupt63
  L__main64
  L__main65
  L__main66
  L_end_trip
  _trip
  L_end_interrupt
  _interrupt
  L__interrupt69
  L__interrupt70
  L__interrupt71
  L__interrupt72
  L__interrupt73
  L__interrupt74
  L_end_main
  _main
  L__main76
  L__main77
  L__main78
  L__main79
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_trip0
  L_trip1
  L_trip2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L__interrupt63
  L__main64
  L__main65
  L__main66
  L_end_trip
  _trip
  L_end_interrupt
  _interrupt
  L__interrupt69
  L__interrupt70
  L__interrupt71
  L__interrupt72
  L__interrupt73
  L__interrupt74
  L_end_main
  _main
  L__main76
  L__main77
  L__main78
  L__main79
